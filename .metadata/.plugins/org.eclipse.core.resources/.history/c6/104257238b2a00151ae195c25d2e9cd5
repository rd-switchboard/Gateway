package org.rdswitchboard.importers.ands.s3.ddb;

import java.io.InputStream;
import java.util.List;

import javax.xml.bind.JAXBException;

import org.rdswitchboard.crosswalks.rifcs.graph.Crosswalk;
import org.rdswitchboard.importers.graph.ddb.Importer;
import org.rdswitchboard.libraries.record.Record;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.model.GetObjectRequest;
import com.amazonaws.services.s3.model.ListObjectsRequest;
import com.amazonaws.services.s3.model.ObjectListing;
import com.amazonaws.services.s3.model.S3Object;
import com.amazonaws.services.s3.model.S3ObjectSummary;

public class Reader {
	private static final String SOURCE_ANDS = "ands";
	
	private final AmazonS3 s3client;
	private final String bucket;
	private final String prefix;
	private final Crosswalk crosswalk;
	private final Importer importer;
	
	public Reader(AWSCredentials awsCredentials, String bucket, String prefix) throws JAXBException {
		this.s3client = new AmazonS3Client(awsCredentials);
		this.bucket = bucket;
		this.prefix = prefix;		
		this.crosswalk = new Crosswalk();
		this.importer = new Importer(awsCredentials);
	}
	
	public void process() throws Exception {
		ListObjectsRequest listObjectsRequest = new ListObjectsRequest()
			.withBucketName(bucket)
			.withPrefix(prefix);
		ObjectListing objectListing;
		S3Object object;

		do {
			objectListing = s3client.listObjects(listObjectsRequest);
			for (S3ObjectSummary objectSummary : 
				objectListing.getObjectSummaries()) {

				object = s3client.getObject(
		                  new GetObjectRequest(bucket, objectSummary.getKey()));
				InputStream xml = object.getObjectContent();
								
				List<Record> records = crosswalk.process(xml);
				importer.importRecords("ands", objectSummary.getKey(), records);
			}
			listObjectsRequest.setMarker(objectListing.getNextMarker());
		} while (objectListing.isTruncated());
	}
}
