package org.rdswitchboard.importers.browser.s3;

import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URL;
import java.util.Properties;

import com.amazonaws.auth.AWSCredentials;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.s3.AmazonS3;
import com.amazonaws.services.s3.AmazonS3Client;
import com.amazonaws.services.s3.model.GetObjectRequest;
import com.amazonaws.services.s3.model.S3Object;
import com.amazonaws.util.StringUtils;

public class App {
	private static final String PROPERTIES_FILE = "properties/import_ands.properties";
	private static final String SOURCE_ANDS = "ands";
	
	public static void main(String[] args) {
		try {
            String propertiesFile = PROPERTIES_FILE;
            if (args.length > 0 && !StringUtils.isNullOrEmpty(args[0])) 
                    propertiesFile = args[0];

            Properties properties = new Properties();
	        try (InputStream in = new FileInputStream(propertiesFile)) {
	            properties.load(in);
	        }
	        
	        String source = properties.getProperty("source");
	        
	        if (StringUtils.isNullOrEmpty(source))
                throw new IllegalArgumentException("Source can not be empty");

	        System.out.println("Source: " + source);
	  
	        String baseUrl = properties.getProperty("base.url");
	        
	        if (StringUtils.isNullOrEmpty(baseUrl))
                throw new IllegalArgumentException("Base URL can not be empty");

	        System.out.println("Base URL: " + baseUrl);
	        
	        String accessKey = properties.getProperty("aws.access.key");
	        String secretKey = properties.getProperty("aws.secret.key");

	        if (StringUtils.isNullOrEmpty(accessKey) || StringUtils.isNullOrEmpty(secretKey))
                throw new IllegalArgumentException("AWS Access Key and Secret Key can not be empty");
	        
	        String bucket = properties.getProperty("s3.bucket");
	        
	        if (StringUtils.isNullOrEmpty(bucket))
                throw new IllegalArgumentException("AWS S3 Bucket can not be empty");

	        System.out.println("S3 Bucket: " + bucket);
	        
	        String prefix = properties.getProperty("s3.prefix");
	        	
	        if (StringUtils.isNullOrEmpty(prefix))
	            throw new IllegalArgumentException("AWS S3 Prefix can not be empty");
        
	        System.out.println("S3 Prefix: " + prefix);
	      
	        URL url = new URL(baseURL + "/registry_object/delete/");

	        
	        /*
	        AWSCredentials awsCredentials = new BasicAWSCredentials(accessKey, secretKey);
	        AmazonS3 s3client = new AmazonS3Client(awsCredentials);
	        String file = "rda/rif/class:collection/54800.xm";
	        
	        System.out.println("Processing file: " + file);
					
			S3Object object = s3client.getObject(new GetObjectRequest(bucket, file));
			InputStream xml = object.getObjectContent();*/
									
	        
		} catch (Exception e) {
            e.printStackTrace();
		}       
	}
}
